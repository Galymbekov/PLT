tr = lambda x. lambda y. x;
fs = lambda x. lambda y. y;
pair = lambda f. lambda s. lambda b. b f s;
fst = lambda p. p tr;
snd = lambda p. p fs;
c0 = lambda s. lambda z. z;
c1 = lambda s. lambda z. s z;
c2 = lambda s. lambda z. s (s z);
c3 = lambda s. lambda z. s (s (s z));
c4 = lambda s. lambda z. s (s (s (s z)));
    plus = lambda m. lambda n. lambda s. lambda z.m s(n s z);
    zz = pair c0 c0;
    ss = lambda p. pair (snd p) (plus c1 (snd p));
    prd = lambda m. fst (m ss zz);
        and = lambda x. lambda y. x y fs;
        minus = lambda m. lambda n. n prd m;
        iszeero = lambda m. m (lambda x. fs) tr;
    minus = lambda m. lambda n. n prd m;
    loequ = lambda m. lambda n. iszeero(minus m n);
    fix = lambda f. (lambda x. f(lambda y. x x y))(lambda x. f(lambda y. x x y));
    newplus = fix(lambda plus. lambda a. lambda b. if iszero a then b else succ(plus (pred a )b));
    church_to_bool = lambda cb. cb true false;
    lambdasucc = lambda m. succ m;
    church_to_int = lambda n. n lambdasucc 0;
    realloequ = lambda cb1. lambda cb2. (loequ cb1 cb2) true false;
realfib = lambda fib. lambda n. if realloequ n c2 then c1 else (plus (fib(minus n c1)) (fib(minus n c2)));
fib = fix realfib;
/* >>>>>>> tests after this line <<<<< */
realloequ c4 c6;
church_to_int (fib c8);